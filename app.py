from flask import Flask, request
import telebot
import os
import secrets
from telebot.types import InputMediaPhoto, InputMediaVideo

# Thay YOUR_BOT_TOKEN b·∫±ng token c·ªßa bot c·ªßa b·∫°n
TOKEN = "7648462649:AAHsPnWL7IlsGgtkTNxdHBm3xCmDbFbfjLU"
GROUP_CHAT_ID = -1002389087763  # ID nh√≥m Telegram ƒë·ªÉ l∆∞u file ID
bot = telebot.TeleBot(TOKEN)

app = Flask(__name__)

# L∆∞u tr·ªØ t·∫°m th·ªùi file_id theo phi√™n g·ª≠i
user_sessions = {}
link_mapping = {}

# Route ch√≠nh ƒë·ªÉ ki·ªÉm tra tr·∫°ng th√°i bot
@app.route('/')
def index():
    return "Bot is running"

# Webhook route
@app.route('/' + TOKEN, methods=['POST'])
def webhook():
    json_str = request.get_data().decode('UTF-8')
    print("Webhook data received:", json_str)  # Ghi log ƒë·ªÉ ki·ªÉm tra webhook
    update = telebot.types.Update.de_json(json_str)
    bot.process_new_updates([update])
    return "OK", 200

# Thi·∫øt l·∫≠p Webhook
def set_webhook():
    url = "https://vui-vui.vercel.app/" + TOKEN  # Thay b·∫±ng URL c·ªßa b·∫°n tr√™n Vercel
    bot.remove_webhook()
    bot.set_webhook(url=url)

# X·ª≠ l√Ω l·ªánh /start
@bot.message_handler(commands=["start"])
def handle_start(message):
    bot.reply_to(message, "Bot is running and ready to interact!")

# X·ª≠ l√Ω c√°c lo·∫°i tin nh·∫Øn (h√¨nh ·∫£nh, video)
@bot.message_handler(content_types=["photo", "video"])
def handle_media(message):
    user_id = message.from_user.id
    if user_id not in user_sessions:
        user_sessions[user_id] = []
    
    if message.content_type == "photo":
        file_id = message.photo[-1].file_id
        user_sessions[user_id].append((file_id, "·∫¢nh"))
    elif message.content_type == "video":
        file_id = message.video.file_id
        user_sessions[user_id].append((file_id, "Video"))
    bot.reply_to(message, "Received your media!")

# X·ª≠ l√Ω l·ªánh /okay
@bot.message_handler(commands=["okay"])
def handle_ok(message):
    user_id = message.from_user.id
    if user_id not in user_sessions or not user_sessions[user_id]:
        bot.reply_to(message, "ƒê√©o c√≥ file!")
        return

    # T·∫°o danh s√°ch file ID
    media_list = user_sessions[user_id]
    message_text = "ƒê√£ l∆∞u c√°c file:\n"
    for idx, (file_id, file_type) in enumerate(media_list, start=1):
        message_text += f"File {idx} ({file_type})\n"

    # Chuy·ªÉn ti·∫øp t·ª´ng file v√†o nh√≥m
    for file_id, file_type in media_list:
        if file_type == "·∫¢nh":
            bot.send_photo(GROUP_CHAT_ID, file_id)
        elif file_type == "Video":
            bot.send_video(GROUP_CHAT_ID, file_id)

    # G·ª≠i th√¥ng b√°o v√†o nh√≥m
    sent_message = bot.send_message(GROUP_CHAT_ID, message_text)

    # T·∫°o m√£ bƒÉm duy nh·∫•t d·ª±a tr√™n message_id
    random_token = secrets.token_hex(16)  # Sinh chu·ªói ng·∫´u nhi√™n 32 k√Ω t·ª±
    link_mapping[random_token] = (sent_message.message_id, media_list)
    user_link = f"https://t.me/{bot.get_me().username}?start={random_token}"

    # G·ª≠i li√™n k·∫øt cho ng∆∞·ªùi d√πng
    bot.reply_to(message, f"ƒê√¢y l√† ƒë∆∞·ªùng link c·ªßa m√†yü´µ:\n\n{user_link}")

    # X√≥a phi√™n c·ªßa ng∆∞·ªùi d√πng
    user_sessions[user_id] = []

# Ch·∫°y Flask server
if __name__ == "__main__":
    set_webhook()  # Thi·∫øt l·∫≠p Webhook
    app.run(host="0.0.0.0", port=int(os.environ.get('PORT', 5000)))  # Ch·∫°y Flask server
